/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package imagenurl;

import ER.HtmlDoc;
import java.awt.Image;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.URL;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Paolo
 */
public class Visor extends javax.swing.JFrame {
    private int estado=-1;
    private String tem_user;
    private String tem_dir;
    private String content;
    private String nombre="";
    /**
     * Creates new form Visor
     * @throws java.io.IOException
     */
    public Visor() throws IOException {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("InstaPerfil");
        jcTam.removeAllItems();
        jcTam.addItem("600");
        jcTam.addItem("480");
        jcTam.addItem("720");
        jcTam.addItem("1080");
        Cargar_Imagenes_Url("https://www.instagram.com/instagram/","600");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        scroll = new javax.swing.JScrollPane();
        imagen = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        imagen_s2 = new javax.swing.JLabel();
        Buscar = new javax.swing.JButton();
        jtBuscar = new javax.swing.JTextField();
        jtCargar = new javax.swing.JTextField();
        jbCargar = new javax.swing.JButton();
        jcTam = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jbGuardar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        scroll.setViewportView(imagen);

        jScrollPane1.setViewportView(imagen_s2);

        Buscar.setText("Buscar");
        Buscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BuscarMouseClicked(evt);
            }
        });
        Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarActionPerformed(evt);
            }
        });

        jtBuscar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jtBuscar.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtBuscar.setToolTipText("ejemplo: instagram");

        jtCargar.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtCargar.setToolTipText("ejemplo: https://www.instagram.com/instagram");

        jbCargar.setText("Cargar");
        jbCargar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbCargarMouseClicked(evt);
            }
        });

        jcTam.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcTam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcTamActionPerformed(evt);
            }
        });

        jLabel1.setText("Tama√±o:");

        jbGuardar.setText("Guardar");
        jbGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbGuardarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jtCargar, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(71, 71, 71))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jbGuardar)
                                        .addComponent(Buscar))
                                    .addGap(133, 133, 133)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(5, 5, 5)
                                    .addComponent(jbCargar))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(29, 29, 29)
                                    .addComponent(jcTam, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 609, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(jtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(Buscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(26, 26, 26)
                        .addComponent(jcTam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtCargar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbCargar)
                    .addComponent(jbGuardar))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BuscarActionPerformed

    private void BuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BuscarMouseClicked
        // TODO add your handling code here:
        if(!this.jtBuscar.getText().equals(""))
        {
            try {
                tem_user=jtBuscar.getText();
                Cargar_Imagenes_User(jtBuscar.getText(),(String)jcTam.getSelectedItem());
                estado=0;
            } catch (IOException ex) {
                Logger.getLogger(Visor.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Ha ocurrido un error en la busqueda. Asegurese de que sea un nombre de usuario existente.");
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Completar casillero.");
        }
    }//GEN-LAST:event_BuscarMouseClicked

    private void jbCargarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbCargarMouseClicked
        // TODO add your handling code here:
        if(!this.jtCargar.getText().equals(""))
        {
            try {
                tem_dir=jtCargar.getText();
                Cargar_Imagenes_Url(jtCargar.getText(),(String)jcTam.getSelectedItem());
                estado=1;
            } catch (IOException ex) {
                Logger.getLogger(Visor.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Ha ocurrido un error. Asegurese de que la direccion sea valida:\n Ejm: https://www.instagram.com/instagram/");
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Completar casillero.");
        }
    }//GEN-LAST:event_jbCargarMouseClicked

    private void jcTamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcTamActionPerformed
        // TODO add your handling code here:
        switch(estado)
        {
            case -1: //imagen de instagram inicial
            {
            try {
                Cargar_Imagenes_Url("https://www.instagram.com/instagram/",(String)jcTam.getSelectedItem());
            } catch (IOException ex) {
                Logger.getLogger(Visor.class.getName()).log(Level.SEVERE, null, ex);
            }
                break;
            }
            case 0: //accion ultima de busqueda de usuario
            {
                try {
                Cargar_Imagenes_User(tem_user,(String)jcTam.getSelectedItem());
                estado=0;
            } catch (IOException ex) {
                Logger.getLogger(Visor.class.getName()).log(Level.SEVERE, null, ex);
            }
                break;
            }
            case 1: //accion ultima de carga desde url
            {
                try {
                Cargar_Imagenes_Url(tem_dir,(String)jcTam.getSelectedItem());
                estado=1;
            } catch (IOException ex) {
                Logger.getLogger(Visor.class.getName()).log(Level.SEVERE, null, ex);
            }
                break;
            }
            
            default:
                break;
        }
    }//GEN-LAST:event_jcTamActionPerformed

    private void jbGuardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbGuardarMouseClicked
        try {
            // TODO add your handling code here:
            descargar(this.content);
            System.out.println("cont:"+this.content);
        } catch (Exception ex) {
            Logger.getLogger(Visor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbGuardarMouseClicked

    
    private void Cargar_Imagenes_User(String user,String tam) throws IOException
    {
        HtmlDoc cod_fuente=new HtmlDoc("https://www.instagram.com/"+user+"/","meta");
        ArrayList<String> resultado=cod_fuente.getContenidos();
        if(resultado.size()>14)
        {
        String cadena="https://"+Obtener_Url(resultado.get(14),tam);
        String sub_cadena="https://"+Obtener_Url(resultado.get(14),"200");
        //almacenando la direccion del contenido
        this.content=cadena;
        URL url = new URL(cadena);
        URL url2=new URL(sub_cadena);
        Image image = ImageIO.read(url);
        Image sub_image = ImageIO.read(url2);
        this.imagen.setIcon(new ImageIcon(image));
        this.imagen_s2.setIcon(new ImageIcon(sub_image));
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Error con la conexion al servidor / Datos erroneos.");
        }
    }
    
    private void Cargar_Imagenes_Url(String dir,String tam) throws IOException
    {
        HtmlDoc cod_fuente=new HtmlDoc(dir,"meta");
        ArrayList<String> resultado=cod_fuente.getContenidos();
        
        if(resultado.size()>14)
        {
        String cadena="https://"+Obtener_Url(resultado.get(14),tam);
        String sub_cadena="https://"+Obtener_Url(resultado.get(14),"200");
        //almacenando la direccion del contenido
        this.content=cadena;
        
        URL url = new URL(cadena);
        URL url2=new URL(sub_cadena);
        Image image = ImageIO.read(url);
        Image sub_image = ImageIO.read(url2);
        this.imagen.setIcon(new ImageIcon(image));
        this.imagen_s2.setIcon(new ImageIcon(sub_image));
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Error con la conexion al servidor / Datos erroneos.");
        }
    }
    
    /**
     * @param args the command line arguments
     */
    private String Obtener_Url(String cadena,String tama√±o)
    {
        this.nombre="";
        String url="";
        int i=0;
        while(i<cadena.length()-3)
        {
            if(cadena.charAt(i)=='/' && cadena.charAt(i+1)=='/')
            {
                i+=2;
                int sl=0;
                while(i<cadena.length()-3)
                {
                    if(cadena.charAt(i)=='/')
                    {
                        sl++;
                        url+=cadena.charAt(i);
                        i++;
                    }
                    else
                    {
                        if(sl==2)
                        {
                            url+='s'+tama√±o+'x'+tama√±o;
                            while(cadena.charAt(i)!='/')
                            {
                                i++;
                            }
                        }
                        else
                        {
                        if(sl>2)
                        {
                            this.nombre+=cadena.charAt(i);
                        }
                        url+=cadena.charAt(i);
                        i++;
                        }
                    }
                    
                }
            }
            else
                i++;
        }
        
        return url;
    }
    
    
   private void descargar(String url) throws Exception {
 
   URL ficheroUrl = new URL(url);
   InputStream inputStream = ficheroUrl.openStream();			
   OutputStream outputStream = new FileOutputStream("C:\\Users\\%username%\\Desktop\\"+this.nombre); // path y nombre del nuevo fichero creado
   
   byte[] b = new byte[2048];
   int longitud;
 
   while ((longitud = inputStream.read(b)) != -1) {
      outputStream.write(b, 0, longitud);
   }
 
   inputStream.close();  // Cerramos la conexi√≥n entrada
   outputStream.close(); // Cerramos la conexi√≥n salida
}
    
    public static void main(String args[]){
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Visor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Visor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Visor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Visor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Visor().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(Visor.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Buscar;
    private javax.swing.JLabel imagen;
    private javax.swing.JLabel imagen_s2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbCargar;
    private javax.swing.JButton jbGuardar;
    private javax.swing.JComboBox jcTam;
    private javax.swing.JTextField jtBuscar;
    private javax.swing.JTextField jtCargar;
    private javax.swing.JScrollPane scroll;
    // End of variables declaration//GEN-END:variables
}
